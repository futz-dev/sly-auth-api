name: Scaffoldly Template Sync
on:
  workflow_dispatch:
  push:
    branches:
      - main
env:
  SCAFFOLDLY_GITHUB_TOKEN: ${{ secrets.SCAFFOLDLY_TEMPLATE_SYNC_GITHUB_TOKEN }}
  SCAFFOLDLY_TARGET_REPO: scaffoldly/sly-auth-api-template
  VERSION_FILE: package.json
jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
          path: src
      - uses: actions/checkout@v2
        with:
          token: ${{ env.SCAFFOLDLY_GITHUB_TOKEN }}
          repository: ${{ env.SCAFFOLDLY_TARGET_REPO }}
          persist-credentials: false
          fetch-depth: 0
          path: dst
      - run: |
          rm -fr .git
          cp -R ../dst/.git .
        working-directory: src
      - run: |
          new_version=$(npx semver -i minor $(jq -r .version ${{ env.VERSION_FILE }}))
          git checkout -b "${{ github.repository }}/${new_version}"
          git add .
          echo 'NEW_VERSION="$new_version" >> $GITHUB_ENV
        id: prepare
        working-directory: src
      - run: git restore -s@ -SW -- .scaffoldly
        working-directory: src
      - run: git restore -s@ -SW -- .github/workflows/slyci-*
        working-directory: src
      - run: |
          contents="$(jq -r --arg v ${{ env.NEW_VERSION }} '.version = $v' ${{ env.VERSION_FILE }})"
          echo "${contents}" > ${{ env.VERSION_FILE }}
          git add ${{ env.VERSION_FILE }}
        working-directory: src
      - run: |
          git config --local user.email "template-sync@scaffold.ly"
          git config --local user.name "Scaffoldly Template Sync"
          git commit -m "Update to ${{ env.NEW_VERSION }}"
        working-directory: src
      - uses: ad-m/github-push-action@master
        with:
          github_token: ${{ env.SCAFFOLDLY_GITHUB_TOKEN }}
          repository: ${{ env.SCAFFOLDLY_TARGET_REPO }}
          branch: ${{ github.repository }}/${{ env.NEW_VERSION }}
          directory: src
